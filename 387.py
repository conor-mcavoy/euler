from math import ceil, sqrt

def harshad(n):
    if not n % sum([int(d) for d in str(n)]): return True
    return False

def is_prime(n):
    if n == 1: return False
    if n == 2: return True
    if not n % 2: return False
    for x in range(3, int(ceil(sqrt(n) + 1)), 2):
        if not n % x: return False
    return True

def strong(n):
    if is_prime(n / sum([int(d) for d in str(n)])): return True
    return False
"""
rtrun = [[1, 2, 3, 4, 5, 6, 7, 8, 9]]

for l in range(1, 15):
    temp = []
    for x in rtrun[-1]:
        for add in range(10):
            if harshad(int(str(x) + str(add))):
                temp.append(int(str(x) + str(add)))
    rtrun.append(temp)

print(len(rtrun[-1]))
s = []
for x in rtrun:
    for e in x:
        if strong(e):
            s.append(e)"""
s = [18, 21, 27, 42, 45, 63, 84, 201, 207, 209, 247, 402, 407, 423, 481,\
     603, 801, 803, 804, 846, 2007, 2043, 4086, 4203, 4809, 8406, 20403,\
     40007, 40023, 40027, 40201, 40806, 48027, 80046, 80402, 84063, 200487,\
     240807, 400827, 408009, 486001, 486003, 804027, 2000001, 2004807,\
     2408041, 4000002, 4000009, 4020807, 6000003, 8000003, 8000004, 8040207,\
     8046003, 20040007, 24084001, 40000207, 40000863, 40020001, 40020003,\
     40080609, 40082007, 42000003, 48000603, 48024001, 80040002, 80040006,\
     80046009, 84000006, 200000001, 200000007, 240000007, 240840081,\
     400000002, 400000203, 400000869, 400800603, 400820007, 402080007,\
     408002007, 480200007, 600000003, 800000004, 800000406, 800400027,\
     800400061, 800460003, 840000063, 2000000001, 2000000043, 2004000003,\
     2004800007, 2040080007, 2040084009, 4000000002L, 4000000086L,\
     4000000203L, 4000008609L, 4002000003L, 4008000006L, 4008060009L,\
     4020804009L, 4080006041L, 6000000003L, 8000000004L, 8000000406L,\
     8000006007L, 8004000006L, 8040200007L, 8040200487L, 8040240009L,\
     8400006001L, 20000000041L, 20000000403L, 20000040003L, 20004000807L,\
     20048000007L, 20400000003L, 20400800003L, 40000000007L, 40000000023L,\
     40000000027L, 40000000082L, 40000000806L, 40000080006L, 40002000087L,\
     40008060401L, 40020000003L, 40086000003L, 40800000006L, 48020000007L,\
     48020004009L, 48024000003L, 80000000041L, 80000000046L, 80000040603L,\
     80040000006L, 80402040401L, 80402400009L, 200000000001L, 200000000007L,\
     200000004001L, 204000000001L, 204000000003L, 204008000007L, 204008000401L,\
     240800000007L, 400000000002L, 400000002087L, 400000008002L, 400002008007L,\
     400080002007L, 400200000003L, 400800600009L, 400820000003L, 400820040009L,\
     402080400009L, 408000000002L, 408000000006L, 408002040001L, 420000000003L,\
     600000000003L, 800000000004L, 800000400609L, 800000600409L, 800004002007L,\
     800040604001L, 800400000006L, 800400000603L, 800400020007L, 800460000009L,\
     804000060003L, 804020048007L, 840000000006L, 840000000063L, 2000004000003L,\
     2000040000003L, 2000400080007L, 2040080400801L, 4000000000003L,\
     4000000000009L, 4000002000001L, 4000008000006L, 4000008600009L,\
     4000020080409L, 4000080000006L, 4000800000603L, 4002000000003L,\
     4002000800009L, 4020804000003L, 4086000000001L, 4802000000409L,\
     4802000400009L, 4802004000003L, 8000000000006L, 8000000040203L,\
     8000004000002L, 8000004000009L, 8000006004009L, 8000400002007L,\
     8000400600003L, 8004000000006L, 8040006040041L, 8040060080001L,\
     8400060000803L, 20000000048003L, 20000000400807L, 20000004080009L,\
     20000040000087L, 20000400000003L, 20004000800007L, 20040000000007L,\
     20048004000003L, 20048400008003L, 24080000000409L, 24080000400009L,\
     24080004000001L, 40000000000207L, 40000000020003L, 40000000080001L,\
     40000000080069L, 40000000208007L, 40000000208487L, 40000008000681L,\
     40000008020007L, 40000080000027L, 40000080006009L, 40000800000006L,\
     40080000002007L, 40080600000009L, 40082004000003L, 40800200040081L,\
     42000000000003L, 80000000040006L, 80000060000007L, 80000400200007L,\
     80040000000009L, 80040002400801L, 80400000002409L, 84000000000006L,\
     200000000400003L, 200000040804009L, 200000400000003L, 200480000004001L,\
     240000000000007L, 240000000840001L, 240800000000007L, 240800000004009L,\
     400000000002001L, 400000000800006L, 400000002080007L, 400000008600003L,\
     400000080200007L, 400000200000003L, 400000200000807L, 400000800000006L,\
     400000800000069L, 400020000848001L, 400800000068001L, 400806000000009L,\
     400820004000003L, 402080000000007L, 408002000000007L, 420000000000003L,\
     480000000200007L, 800000000000001L, 800000000000469L, 800000000004002L,\
     800000000460003L, 800000000460009L, 800000040000063L, 800000400000006L,\
     800000400006003L, 800040604000041L, 800400000608001L, 804000000020809L,\
     804024000000009L, 840000000000006L, 840600000000801L]

t = 0
for x in s:
    for d in ["1", "3", "7", "9"]:
        if int(str(x) + d) < 10**14 and is_prime(int(str(x) + d)):
            t += int(str(x) + d)
print(t)
















